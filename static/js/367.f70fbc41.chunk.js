"use strict";(self.webpackChunkclient=self.webpackChunkclient||[]).push([[367],{2367:(e,s,t)=>{t.r(s),t.d(s,{default:()=>f});var n=t(5043),i=t(3519),a=t(3702),c=t(6856),l=t(8628),r=t(1072),d=t(8602),o=t(1719),m=t(4063),x=t(3005),u=t(3204),h=t(59),b=t(8280),p=t(9153),j=t(2489),g=t(2105),y=t(5692),A=t(579);const f=function(){const[e,s]=(0,n.useState)("storage"),t=[{id:1,title:"Basic Storage Layout !",description:"Contract with various data types showing storage slot allocation !",code:"contract X {\n      uint256 public a = 1;  // Slot 0\n      uint128 public b = 2;  // Slot 1 (partially filled)\n      uint128 public c = 3;  // Slot 1 (same as 'b', packed)\n      bool public d = true;  // Slot 2 (partially filled)\n      address public e = msg.sender; // Slot 3\n  \n      struct Data {\n          uint256 x;\n          uint256 y;\n      }\n      Data public data = Data(10, 20); // Slot 4 & 5\n  \n      mapping(address => uint256) public balances; // keccak256(slot)\n      string public text = \"Hello\"; // Reference in slot 6\n  }",slots:[{id:0,content:"uint256 a (32 bytes)",color:"primary"},{id:1,content:"uint128 b + uint128 c (16 + 16 bytes)",color:"success"},{id:2,content:"bool d (1 byte)",color:"warning"},{id:3,content:"address e (20 bytes)",color:"info"},{id:4,content:"Data.x (32 bytes)",color:"danger"},{id:5,content:"Data.y (32 bytes)",color:"danger"},{id:6,content:"text reference",color:"secondary"}]},{id:2,title:"Struct Packing",description:"Efficient struct layout with packed variables",code:"contract X {\n      struct User {\n          uint128 id;   // 16 bytes\n          bool active;  // 1 byte\n          uint8 level;  // 1 byte\n          uint256 score; // 32 bytes (New slot)\n      }\n  }",slots:[{id:0,content:"id (16 bytes) + active (1 byte) + level (1 byte)",color:"success"},{id:1,content:"score (32 bytes)",color:"primary"}]},{id:3,title:"Mapping Storage !",description:"How mappings are stored using keccak256",code:"contract X {\n      mapping(address => uint256) public balances;  // Slot 0\n      \n      function setBalance(address user, uint256 amount) public {\n          balances[user] = amount;\n      }\n  }",slots:[{id:0,content:"mapping slot identifier",color:"info"},{id:"n",content:"keccak256(key + slot) => value",color:"warning"}]}],f=[{title:"Variable Packing",description:"Optimize storage by packing variables efficiently",unsafe:"uint128 a; // Slot 0\n  uint256 b; // Slot 1\n  uint128 c; // Slot 2",safe:"uint128 a; // Slot 0\n  uint128 c; // Slot 0 (packed)\n  uint256 b; // Slot 1"}],N=[{icon:(0,A.jsx)(x.A,{size:24}),text:"Every storage slot can store up to 32 bytes of data"},{icon:(0,A.jsx)(u.A,{size:24}),text:"If a variable is \u2264 32 bytes, it fits into a single slot"},{icon:(0,A.jsx)(h.A,{size:24}),text:"If a variable is > 32 bytes, it gets its own slot and additional storage"}];return(0,A.jsxs)(i.A,{className:"py-5",children:[(0,A.jsxs)("div",{className:"d-flex align-items-center gap-3 mb-4",children:[(0,A.jsx)(b.A,{size:32,className:"text-primary"}),(0,A.jsx)("h1",{className:"mb-0",children:"Ethereum Virtual Machine (EVM)"})]}),(0,A.jsxs)(a.A.Container,{activeKey:e,onSelect:e=>s(e),children:[(0,A.jsxs)(c.A,{variant:"tabs",className:"mb-4",children:[(0,A.jsx)(c.A.Item,{children:(0,A.jsxs)(c.A.Link,{eventKey:"storage",className:"d-flex align-items-center gap-2",children:[(0,A.jsx)(x.A,{size:18}),"Storage Layout"]})}),(0,A.jsx)(c.A.Item,{children:(0,A.jsxs)(c.A.Link,{eventKey:"gas",className:"d-flex align-items-center gap-2",children:[(0,A.jsx)(p.A,{size:18}),"Gas Optimization"]})}),(0,A.jsx)(c.A.Item,{children:(0,A.jsxs)(c.A.Link,{eventKey:"rules",className:"d-flex align-items-center gap-2",children:[(0,A.jsx)(j.A,{size:18}),"Storage Rules"]})})]}),(0,A.jsxs)(a.A.Content,{children:[(0,A.jsx)(a.A.Pane,{eventKey:"storage",children:t.map((e=>(0,A.jsxs)(l.A,{className:"mb-4",children:[(0,A.jsx)(l.A.Header,{children:(0,A.jsx)("h3",{className:"h5 mb-0",children:e.title})}),(0,A.jsxs)(l.A.Body,{children:[(0,A.jsx)("p",{className:"text-muted",children:e.description}),(0,A.jsxs)(r.A,{className:"mb-4",children:[(0,A.jsxs)(d.A,{md:6,children:[(0,A.jsxs)("h4",{className:"h6 mb-3 d-flex align-items-center gap-2",children:[(0,A.jsx)(g.A,{size:18}),"Contract Code"]}),(0,A.jsx)("pre",{className:"bg-light p-3 rounded",children:(0,A.jsx)("code",{children:e.code})})]}),(0,A.jsxs)(d.A,{md:6,children:[(0,A.jsxs)("h4",{className:"h6 mb-3 d-flex align-items-center gap-2",children:[(0,A.jsx)(x.A,{size:18}),"Storage Slots"]}),e.slots.map((e=>(0,A.jsxs)(o.A,{variant:e.color,className:"d-flex align-items-center mb-2",children:[(0,A.jsxs)("strong",{className:"me-2",children:["Slot ",e.id,":"]})," ",e.content]},e.id)))]})]})]})]},e.id)))}),(0,A.jsx)(a.A.Pane,{eventKey:"gas",children:f.map(((e,s)=>(0,A.jsxs)(l.A,{className:"mb-4",children:[(0,A.jsx)(l.A.Header,{children:(0,A.jsx)("h3",{className:"h5 mb-0",children:e.title})}),(0,A.jsxs)(l.A.Body,{children:[(0,A.jsx)("p",{className:"text-muted",children:e.description}),(0,A.jsxs)(r.A,{children:[(0,A.jsxs)(d.A,{md:5,children:[(0,A.jsx)(m.A,{bg:"danger",className:"mb-2",children:"Unsafe"}),(0,A.jsx)("pre",{className:"bg-light p-3 rounded",children:(0,A.jsx)("code",{children:e.unsafe})})]}),(0,A.jsx)(d.A,{md:2,className:"d-flex align-items-center justify-content-center",children:(0,A.jsx)(y.A,{size:24})}),(0,A.jsxs)(d.A,{md:5,children:[(0,A.jsx)(m.A,{bg:"success",className:"mb-2",children:"Safe"}),(0,A.jsx)("pre",{className:"bg-light p-3 rounded",children:(0,A.jsx)("code",{children:e.safe})})]})]})]})]},s)))}),(0,A.jsx)(a.A.Pane,{eventKey:"rules",children:(0,A.jsx)(l.A,{children:(0,A.jsx)(l.A.Body,{children:(0,A.jsx)(r.A,{children:N.map(((e,s)=>(0,A.jsx)(d.A,{md:4,children:(0,A.jsxs)("div",{className:"d-flex align-items-center gap-3 mb-4",children:[(0,A.jsx)("div",{className:"bg-primary bg-opacity-10 p-3 rounded",children:e.icon}),(0,A.jsx)("p",{className:"mb-0",children:e.text})]})},s)))})})})})]})]})]})}}}]);
//# sourceMappingURL=367.f70fbc41.chunk.js.map