/*! For license information please see 48.4e9daa39.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkclient=self.webpackChunkclient||[]).push([[48],{1680:(e,n,r)=>{r.d(n,{A:()=>o});const o=(0,r(7784).A)("FileText",[["path",{d:"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z",key:"1rqfz7"}],["path",{d:"M14 2v4a2 2 0 0 0 2 2h4",key:"tnqrlb"}],["path",{d:"M10 9H8",key:"b1mrlr"}],["path",{d:"M16 13H8",key:"t4e002"}],["path",{d:"M16 17H8",key:"z1uh3a"}]])},3048:(e,n,r)=>{r.r(n),r.d(n,{default:()=>a});r(5043);var o=r(457),s=r(1680),t=r(579);const a=()=>(0,t.jsxs)(o.A.Item,{eventKey:"2",children:[(0,t.jsxs)(o.A.Header,{children:[(0,t.jsx)(s.A,{className:"me-2"})," Simple Lending Protocol"]}),(0,t.jsxs)(o.A.Body,{children:[(0,t.jsxs)("p",{children:[(0,t.jsx)("strong",{children:"Uses:"})," The Simple Lending Protocol allows users to deposit ETH as collateral, borrow tokens against it, and repay loans to free up collateral."]}),(0,t.jsxs)("p",{children:[(0,t.jsx)("strong",{children:"Scope:"})," It provides a lending mechanism with liquidation rules to maintain a healthy collateral ratio."]}),(0,t.jsxs)("p",{children:[(0,t.jsx)("strong",{children:"Purpose:"})," Enables decentralized lending and borrowing with ETH as collateral and a stable token as the borrowed asset."]}),(0,t.jsxs)("p",{children:[(0,t.jsx)("strong",{children:"SimpleLending:"})," Implements a lending system with ETH collateral and ERC20 tokens."]}),(0,t.jsxs)("ul",{children:[(0,t.jsxs)("li",{children:[(0,t.jsx)("strong",{children:"stableToken:"})," The ERC20 token used for borrowing."]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("strong",{children:"COLLATERAL_RATIO, LIQUIDATION_RATIO:"})," Defines borrowing and liquidation thresholds."]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("strong",{children:"ETH_TO_TOKEN_RATE:"})," Conversion rate from ETH to stable tokens."]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("strong",{children:"loans mapping:"})," Stores user loan details, including collateral and borrowed tokens."]})]}),(0,t.jsx)("p",{children:(0,t.jsx)("strong",{children:"Functions Breakdown:"})}),(0,t.jsxs)("ul",{children:[(0,t.jsxs)("li",{children:[(0,t.jsx)("strong",{children:"depositCollateral:"})," Allows users to deposit ETH as collateral."]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("strong",{children:"borrow:"})," Enables users to borrow tokens based on their collateral."]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("strong",{children:"repay:"})," Allows users to repay borrowed tokens."]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("strong",{children:"liquidate:"})," Allows the admin to liquidate loans if collateral falls below the threshold."]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("strong",{children:"withdrawCollateral:"})," Enables users to withdraw collateral if there\u2019s no outstanding loan."]})]}),(0,t.jsx)("pre",{children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport "@openzeppelin/contracts/token/ERC20/IERC20.sol";\nimport "@openzeppelin/contracts/access/Ownable.sol";\n\ncontract Token is ERC20 {\n    constructor() ERC20("stableToken", "STK") {\n        _mint(msg.sender, 1000000 * (10 ** uint256(decimals())));\n    }\n}\n\ncontract SimpleLending is Ownable {\n    IERC20 public stableToken;\n    uint256 public constant COLLATERAL_RATIO = 150;\n    uint256 public constant LIQUIDATION_RATIO = 120;\n    uint256 public constant ETH_TO_TOKEN_RATE = 2000;\n\n    struct Loan {\n        uint256 collateralETH;\n        uint256 borrowedTokens;\n    }\n\n    mapping(address => Loan) public loans;\n\n    event Deposited(address indexed user, uint256 amount);\n    event Borrowed(address indexed user, uint256 amount);\n    event Repaid(address indexed user, uint256 amount);\n    event Liquidated(address indexed user);\n\n    constructor(IERC20 _stableToken) {\n        stableToken = _stableToken;\n    }\n\n    function depositCollateral() external payable {\n        require(msg.value > 0, "Deposit amount must be greater than zero");\n        loans[msg.sender].collateralETH += msg.value;\n        emit Deposited(msg.sender, msg.value);\n    }\n\n    function borrow(uint256 amount) external {\n        Loan storage loan = loans[msg.sender];\n        require(loan.collateralETH > 0, "No collateral deposited");\n        uint256 maxBorrow = (loan.collateralETH * ETH_TO_TOKEN_RATE * 100) / COLLATERAL_RATIO;\n        require(amount <= maxBorrow, "Borrow amount exceeds collateral limit");\n        loan.borrowedTokens += amount;\n        require(stableToken.transfer(msg.sender, amount), "Token transfer failed");\n        emit Borrowed(msg.sender, amount);\n    }\n\n    function repay(uint256 amount) external {\n        Loan storage loan = loans[msg.sender];\n        require(loan.borrowedTokens >= amount, "Repay amount exceeds loan");\n        require(stableToken.transferFrom(msg.sender, address(this), amount), "Repayment failed");\n        loan.borrowedTokens -= amount;\n        emit Repaid(msg.sender, amount);\n    }\n\n    function liquidate(address user) external onlyOwner {\n        Loan storage loan = loans[user];\n        uint256 requiredCollateral = (loan.borrowedTokens * COLLATERAL_RATIO) / 100;\n        uint256 liquidationThreshold = (loan.borrowedTokens * LIQUIDATION_RATIO) / 100;\n        require(loan.collateralETH * ETH_TO_TOKEN_RATE < liquidationThreshold, "Collateral sufficient");\n        loan.collateralETH = 0;\n        loan.borrowedTokens = 0;\n        emit Liquidated(user);\n    }\n\n    function withdrawCollateral() external {\n        Loan storage loan = loans[msg.sender];\n        require(loan.borrowedTokens == 0, "Outstanding loan exists");\n        uint256 amount = loan.collateralETH;\n        loan.collateralETH = 0;\n        payable(msg.sender).transfer(amount);\n    }\n}'})]})]})},7784:(e,n,r)=>{r.d(n,{A:()=>l});var o=r(5043);const s=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return n.filter(((e,n,r)=>Boolean(e)&&""!==e.trim()&&r.indexOf(e)===n)).join(" ").trim()};var t={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const a=(0,o.forwardRef)(((e,n)=>{let{color:r="currentColor",size:a=24,strokeWidth:l=2,absoluteStrokeWidth:i,className:d="",children:c,iconNode:u,...h}=e;return(0,o.createElement)("svg",{ref:n,...t,width:a,height:a,stroke:r,strokeWidth:i?24*Number(l)/Number(a):l,className:s("lucide",d),...h},[...u.map((e=>{let[n,r]=e;return(0,o.createElement)(n,r)})),...Array.isArray(c)?c:[c]])})),l=(e,n)=>{const r=(0,o.forwardRef)(((r,t)=>{let{className:l,...i}=r;return(0,o.createElement)(a,{ref:t,iconNode:n,className:s(`lucide-${d=e,d.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,l),...i});var d}));return r.displayName=`${e}`,r}}}]);
//# sourceMappingURL=48.4e9daa39.chunk.js.map